-- 1. WINERIES TABLE
-- Stores winery information and a unique code for new users to join.
CREATE TABLE public.wineries (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name text NOT NULL,
    join_code text NOT NULL UNIQUE,
    created_at timestamptz DEFAULT now() NOT NULL
);
-- Index for fast lookups on join codes
CREATE INDEX wineries_join_code_idx ON public.wineries (join_code);
COMMENT ON TABLE public.wineries IS 'Stores winery information and join codes.';

-- 2. USERS TABLE (Public Profile)
-- Mirrors auth.users and links users to their winery.
CREATE TABLE public.users (
    id uuid PRIMARY KEY REFERENCES auth.users(id) ON DELETE CASCADE,
    winery_id bigint REFERENCES public.wineries(id) ON DELETE SET NULL,
    role text NOT NULL CHECK (role IN ('member', 'owner')),
    created_at timestamptz DEFAULT now() NOT NULL
);
COMMENT ON TABLE public.users IS 'Public user profiles, linking auth.users to wineries.';

-- 3. BOP SEQUENCE TABLE
-- Tracks the last used Batch-on-Premise (BOP) number for each winery.
CREATE TABLE public.bop_sequences (
    winery_id bigint PRIMARY KEY REFERENCES public.wineries(id) ON DELETE CASCADE,
    last_bop_number integer DEFAULT 0 NOT NULL
);
COMMENT ON TABLE public.bop_sequences IS 'Tracks the last BOP number for each winery to ensure sequential numbering.';

-- 4. BATCHES TABLE
-- Core table for tracking wine production batches.
CREATE TABLE public.batches (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    winery_id bigint NOT NULL REFERENCES public.wineries(id) ON DELETE CASCADE,
    bop_number integer NOT NULL,
    customer_name text NOT NULL,
    kit_name text NOT NULL,
    kit_weeks integer NOT NULL CHECK (kit_weeks IN (4, 5, 6, 8)),
    date_of_sale date NOT NULL,
    date_put_up date NOT NULL,
    date_rack date,
    date_filter date,
    date_bottle date,
    status text NOT NULL DEFAULT 'pending' CHECK (status IN ('pending', 'done')),
    current_stage text NOT NULL DEFAULT 'put-up' CHECK (current_stage IN ('put-up', 'racked', 'filtered', 'bottled')),
    notes text,
    created_at timestamptz DEFAULT now() NOT NULL,
    -- A batch number must be unique within a single winery
    UNIQUE (winery_id, bop_number)
);
COMMENT ON TABLE public.batches IS 'Tracks wine production batches for each winery.';

-- 5. SUPPORT MESSAGES TABLE
-- Stores support tickets submitted by users.
CREATE TABLE public.support_messages (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    winery_id bigint NOT NULL REFERENCES public.wineries(id) ON DELETE CASCADE,
    user_id uuid NOT NULL REFERENCES public.users(id) ON DELETE CASCADE,
    subject text,
    message text NOT NULL,
    status text NOT NULL DEFAULT 'open' CHECK (status IN ('open', 'resolved')),
    created_at timestamptz DEFAULT now() NOT NULL
);
COMMENT ON TABLE public.support_messages IS 'Stores support tickets from users.';
